<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen"><b>综合<sup>16</sup></b>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="269_local.htm">本地库<sup>15</sup></a>（<a href="269_periodical.htm">期刊<sup>6</sup></a>、<a href="269_thesis.htm">学位<sup>5</sup></a>、<a href="269_conference.htm">会议<sup></sup></a>、<a href="269_book.htm">图书<sup>4</sup></a>）&nbsp;&nbsp;|&nbsp;&nbsp;<a href="269_net.htm">互联网<sup>1</sup></a><br /></div>
<div class="zhengwen">
语句：<span class='red' >积分图的构造方式是位置（i，j）处的值ii(i，j)是原图像(i，j)左上角方向所有像素的和[15]：</span><br><br>
<div style="display:block;">该句相似度：<span class='red' >92</span>%<a href='#xiugaijianyi' style='padding-left:30px;'>查看该句修改建议</a><b>（重度相似，请全面修改）</b><br><br></div>
在本地库和互联网共找出相似内容：16个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='red' >92</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">构造</span><span style="background:#cbcbcb">方式</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">位置</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">方向</span><span style="background:#cbcbcb">所有</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">构造</span><span style="background:#cbcbcb">方式</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">位置</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">方向</span><span style="background:#cbcbcb">所有</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>：<span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span>构建</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……的窗口中任意排列至少可以产生数以10万计的特征，对这些特征求值的计算量是非常大的。而积分图就是只遍历一次图像就可以求出图像中所有区域像素和的快速算法，大大的提高了图像特征值计算的效率。我们来看看它是怎么做到的。积分图是一种能够描述全局信息的矩阵表示方法。<span class='green'>积分图的构造方式是位置（i，j）处的值ii(i，j)是原图像(i，j)左上角方向所有像素的和：积分图构建</span>算法：1）用s(i，j)表示行方向的累加和，初始化s(i，-1)=0;2）用ii(i，j)表示一个……
</td>
</tr>

<tr>
<td align="left" width="100%">
<font color="#666666">来源(互联网)：</font><br>
标题：《级联分类器 - twinkle_star1314的博客        - 博客频道 - CSDN.NET》<br><img border="0" src="../../../images/htm.gif" width="16" height="15">&nbsp;<a target='_blank' href=http://blog.csdn.net/twinkle_star1314/article/details/53291624>http://blog.csdn.net/twinkle_star1314/article/deta...</a>
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='red' >83</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span><span style="background:#cbcbcb">的</span>构造<span style="background:#cbcbcb">方式</span><span style="background:#cbcbcb">是</span>位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">方向</span><span style="background:#cbcbcb">所有</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span><span style="background:#cbcbcb">的</span>表达<span style="background:#cbcbcb">方式</span><span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">像素</span>坐标(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>’<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">方向</span><span style="background:#cbcbcb">所有</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>：<span style="background:#cbcbcb">ii</span>(</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……2积分图像因为矩形特征的数量是比较庞大的，如果直接计算无疑是很费时的，甚至是超出运算量的。积分图像概念的引入成功的解决了这个难题，只用遍历一次图像，就可以求出图像中所有区域像素和，大大地提高了图像特征值计算的效率。积分图是一种能够描述全局信息的矩阵表示方法。<span class='green'>积分图的表达方式是像素坐标(i，j)处的值ii(i，j)是原图像(i’j)左上角方向所有像素的和：ii(</span>i，j)=∑f(k，，)，如图2．8所示图2．8积分图积分图构建算法：1)用s(ij)表示行方向……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《视频图像中的多姿态人脸检测》<br><b>作者：</b>熊英<br><b>分类号：</b>TP317.4<br><b>学科专业：</b>计算机应用技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>张汗灵<br><b>学位授予单位：</b>湖南大学<br><b>学位年度：</b>2014<br><b>关键词：</b>视频图像 人脸检测 运动目标 特征提取 肤色模型
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >58</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造方式<span style="background:#cbcbcb">是</span>位置（i，j）<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>ii(i，j)<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(i，j)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">方向</span><span style="background:#cbcbcb">所有</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">论文(x，y)<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>S(x，y)，S(x，y)<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(x，y)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">方向</span><span style="background:#cbcbcb">所有</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>，如公式</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……右端点（如图3-2阴影所示）的所有像素值的和，而积分图就是只遍历一次图像就可以求出图像中所有区域像素和的快速算法，极大地提高了图像矩形特征值的计算效率。积分图是一种能够描述全局信息的矩阵表示方法。积分图的构造核心是位置万方数据电子科技大学硕士学位<span class='green'>论文(x，y)处的值S(x，y)，S(x，y)是原图像(x，y)左上角方向所有像素的和，如公式</span>积分图的构建算法流程：设置：h(x，y)表示图像的行方向的累加和，S(x，y)表示一个积分图像，i(x，y)……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于视频的车辆检测研究与应用》<br><b>作者：</b>崔芳园<br><b>分类号：</b>U495<br><b>学科专业：</b>计算机应用技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>刘启和<br><b>学位授予单位：</b>电子科技大学<br><b>学位年度：</b>2013<br><b>关键词：</b>车辆检测 样本分类 视频背景建模 特征提取
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >52</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造方式是<span style="background:#cbcbcb">位置</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)是原<span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上角方向所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">图像</span>fL在(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">位置</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">值</span>；f(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)代表<span style="background:#cbcbcb">图像</span>fH在(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">位置</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">值</span>；f(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span></span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……图像fL和高频重构图像fH，即有：根据能量守恒定律可知，图像fL与图像fH能量之和等于原图像能量。即：其中M0，N而且。并且在相同位置(i，j)上的灰度值有如下关系：第二章图像插值知识其中常识个中f(i，j)代表<span class='green'>图像fL在(i，j)位置的像素值；f(i，j)代表图像fH在(i，j)位置的像素值；f(i，j</span>)代表原图像f在(i，j)位置的像素值。分解8分化后图像拆分图图像fL是分解小波分化后的低频信息重构得到的，而图像……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于非均匀B样条曲面的图像插值算法》<br><b>作者：</b>冯杰飞<br><b>学科专业：</b>计算机应用技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>韩慧健<br><b>学位授予单位：</b>山东财经大学<br><b>学位年度：</b>2010<br><b>关键词：</b>图像插值 B样条曲面 边缘检测 双三次插值
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >49</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造方式<span style="background:#cbcbcb">是</span>位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span>原<span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上角方向所有像素<span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">图像</span>上（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）点<span style="background:#cbcbcb">的</span>灰度<span style="background:#cbcbcb">值</span>，N（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">是</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）点<span style="background:#cbcbcb">的</span>权重系数，一般N（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……）选择初始阀值的估算值T式中Zmin、Zmax分别表示总局图像中的最小和最大灰度值。（2）利用阀值T把图像分割成两组，R1（纸背景）和R2（罗纹），其中：（3）计算区域R1和R2的灰度均值Z1和Z2，其中式中，f（i<span class='green'>，j）是图像上（i，j）点的灰度值，N（i，j）是（i，j）点的权重系数，一般N（i，j）</span>=1，0。（4）选择新的阀值T如下：1．乳@（5）如果T，则迭代结束。否则将K+1的值赋给K……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(书籍数据)：</font><br>
<b>章节：</b>《计算机图像处理测纸的罗纹强度》<br><b>书名：</b>《枫林学苑:同济大学软件学院研究生论文集Ⅱ》<br><b>作者：</b>同济大学软件学院论文集编委会<br><b>出版社：</b>同济大学出版社<br><b>出版时间：</b>2005-6-1<br><b>ISBN：</b>7-5608-2996-1
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='orange' >48</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造方式<span style="background:#cbcbcb">是</span>位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span>值ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span>原图像(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上角方向所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span>邻域<span style="background:#cbcbcb">像素</span>点(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">的</span>权重，ωd(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span>邻域<span style="background:#cbcbcb">像素</span>点(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">像素</span>空间邻近度权重，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……滤波[48]最先是由Tomasi.C和Manduchi.R提出。它是一种非线性的滤波方法，结合了像素空间邻近度和像素值相似度，在去除噪的同时能够保持图像的边缘细节部分。双边滤波采用如下公式计算邻域像素点的权重：万方数据南京邮电大学硕士研究生学位论文第五章图像插值其中，ω<span class='green'>(i，j)是邻域像素点(i，j)的权重，ωd(i，j)是邻域像素点(i，j)的像素空间邻近度权重，</span>ωr(i，j)是邻域像素点(i，j)的像素值相似度权重，exp(.)是指数运算，(x，y)是待滤波像素点……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《超大广角畸变图像校正算法的研究与实现》<br><b>作者：</b>斯闻豪<br><b>分类号：</b>TP301.6<br><b>学科专业：</b>计算机应用技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>杨庚<br><b>学位授予单位：</b>南京邮电大学<br><b>学位年度：</b>2015<br><b>关键词：</b>超大广角镜头 图像校正 区域提取算法 经线模型
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">7</div>
<font color="#666666">相似度：</font><span class='orange' >47</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span>图<span style="background:#cbcbcb">的</span>构造方式是位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)是原<span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上<span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">方向</span>所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">行<span style="background:#cbcbcb">方向</span><span style="background:#cbcbcb">的</span>累加<span style="background:#cbcbcb">和</span>s（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">和</span><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图像</span><span style="background:#cbcbcb">ii</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>：扫描<span style="background:#cbcbcb">图像</span>一遍，当到达<span style="background:#cbcbcb">图像</span>右下<span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">像素</span>时，<span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图像</span><span style="background:#cbcbcb">ii</span>就</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……要计算某个区域的像素和时可以直接索引数组的元素，不用重新计算这个区域的像素和，从而加快了计算。积分图的构造方式是位置（x，y）处的值ii（x，y）是原图像（x，y）左上角方向所有像素的和：逐行扫描图像，递归计算每个像素（i，j）<span class='green'>行方向的累加和s（i，j）和积分图像ii（i，j）的值：扫描图像一遍，当到达图像右下角像素时，积分图像ii就</span>构造好了。2系统视频监控功能视频播放的实质是连续播放帧，所以在视频监控中，我们可以把每一帧提取出来，进行人脸检测，如果获取人……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于Viola-Jones的人脸检测在在交通道路监控中的综合应用》<br><b>作者：</b>张晓慧 任腾跃 刘露 李扬 罗骁<br><b>作者单位：</b>四川大学软件学院,双流,610225<br><b>参考文献：</b>2篇<br><b>页码：</b>P239—P239<br><b>页数：</b>1页<br><b>分类号：</b>TP391.41<br><b>期刊名称：</b>《数字通信世界》<br><b>出版时间：</b>2016年1期<br><b>ISSN：</b>1672-7274<br><b>关键词：</b>交通道路监控 人脸检测 OpenCV 应用<br><b>摘要：</b>在交通日益发展的今天，交通监控在刑侦等方面扮演着越来越重要的作用。通过分析智能交通监控的现状，设计并实现了针对交通道路监控的人脸检测系统。系统基于MFC与OpenCV开发实现。该系统主要是通过对监控视频录像中的人脸进行采集，经过分析和处理后将信息存入数据库。提取的人脸图像的特征数据与数据库中存储的特征模板进行搜索匹配，从而进行对重点人员的识别和布控。
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">8</div>
<font color="#666666">相似度：</font><span class='orange' >44</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span><span style="background:#cbcbcb">的</span>构造方式是位置（i，j）<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(i，j)是原<span style="background:#cbcbcb">图像</span>(i，j)左上角方向<span style="background:#cbcbcb">所有</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">任意<span style="background:#cbcbcb">图像</span>g，其<span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span>在(z，y)<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span>灰度<span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(z，Y)为<span style="background:#cbcbcb">图像</span>g中该点左<span style="background:#cbcbcb">所有</span>全数<span style="background:#cbcbcb">像素</span>灰度<span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">积分</span>．即</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……。分别是块E，，E，中像素和的平均值．1．2积分原理事理积分图的概念由Viola提出并用于计算窗口图像的Hart特征口…．图像上任意一点(z，y)的值是指从灰度图像的左上角与当前点所围成的矩形区域所有全数像素点的灰度值之和．定义对<span class='green'>任意图像g，其积分图在(z，y)处的灰度值ii(z，Y)为图像g中该点左所有全数像素灰度值的积分．即</span>文献[15]给出积分图(SSI)．与积分图定义相似，对于每个像素(z。，y。)，当zo一0，yo一0时显然，图像中……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《一种快速的三维块匹配图像去噪方法》<br><b>作者：</b>韩玉兰 宣士斌 刘香品<br><b>作者单位：</b>广西民族大学信息科学与工程学院,广西南宁,530006；广西民族大学信息科学与工程学院,广西南宁 530006；广西民族大学广西混杂计算与集成电路设计分析重点实验室,广西南宁 530006；广西民族大学中国—东盟研究中心,广西南宁 530006<br><b>参考文献：</b>17篇<br><b>页码：</b>P73—P80<br><b>页数：</b>8页<br><b>分类号：</b>TN911.73<br><b>基金项目：</b>广西自然科学基金项目(2012GXNSFAA053227);广西民族大学中国—东盟研究中心项目(KT201325);广西民族大学研究生教育创新计划项目(gxun-chx2014088)<br><b>期刊名称：</b>《广西民族大学学报（自然科学版）》<br><b>出版时间：</b>2015年2期<br><b>ISSN：</b>1673-8462<br><b>关键词：</b>三维决匹配 图像去噪 高斯滤波器 积分图 快速傅里叶变换<br><b>摘要：</b>为了在不降低三维块匹配算法(BM3D)效果的基础上,提高其运算速度,提出一种基于积分图的BM3D的加速算法.在新的算法中,首先利用高斯滤波器对原图像进行粗去噪,再利用积分图计算块的相似性,在块的相似度计算过程中不再进行滤波.在BM3D的第二步维纳滤波中,经过对原算法计算过程进行相应的转换,也可将积分图应用于该阶段.实验表明,改进后的算法,不但保留了三维块匹配算法在去噪方面好的性质,而且运算时间缩短了近1/4.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">9</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造方式<span style="background:#cbcbcb">是</span>位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">是</span>原<span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上角方向所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">处理<span style="background:#cbcbcb">的</span>算法<span style="background:#cbcbcb">是</span>：式中，G(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)为处理后<span style="background:#cbcbcb">图像</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">值</span>，f(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)为源<span style="background:#cbcbcb">图像</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">值</span>，F(<span style="background:#cbcbcb">i</span>-1</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……（\n）将这两个部分割开：行二重积分，这些积分的被积函数均为不可积，即被积函数的原函数很难写出。为了计算位图图像的锐化处理程序运行结果如图6-19所示，加亮了原始图像的边。图6-19显示经锐化处理的图像6.浮雕处理位图图像的浮雕<span class='green'>处理的算法是：式中，G(i，j)为处理后图像的像素值，f(i，j)为源图像的像素值，F(i-1</span>，j)为前一个相邻像素的值。常数一般取128。即：式中，r1.g1，b1分别为为源图像的像素f(i，j……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(书籍数据)：</font><br>
<b>章节：</b>《第6章 图像合成器》<br><b>书名：</b>《程序设计Visual Basic 6》<br><b>作者：</b>本书写委员会<br><b>出版社：</b>电子工业出版社<br><b>出版时间：</b>2001-1-1<br><b>ISBN：</b>7-5053-6452-9
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">10</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span>图<span style="background:#cbcbcb">的</span>构造方式是位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)是<span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span>方向所有像素<span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">示，<span style="background:#cbcbcb">图像</span>中任意一点(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，，)定义为<span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span><span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span>到任意点(<span style="background:#cbcbcb">i</span>，，)相应<span style="background:#cbcbcb">的</span>对角线区域灰度</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……图像生成SURF特征描述子，最后进行图像匹配。具体的SURF算法‘63的基本流程如图1所示。建J检测整Haar波图变换像立配l蚕三角问特征分图}极值像l点定位描述符图ISURF算法基本流程图1．1特征点检测1．1．1积分图像算法的改进如图2所<span class='green'>示，图像中任意一点(i，j)的积分值ii(i，，)定义为原图像左上角到任意点(i，，)相应的对角线区域灰度</span>值的总和‘引，即：式(1)中P(i0’表示原图像中像素点(i0’的灰度值。ii(i，歹)可用式(……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《一种改进的快速SURF算法》<br><b>作者：</b>杜冬梅 王红旗 田昆鹏 姜磊<br><b>作者单位：</b>河南理工大学电气与自动化学院,焦作,454000；江苏大学生物机电工程研究院,镇江,212013<br><b>参考文献：</b>7篇<br><b>被引次数：</b>1次（统计时间：2015年8月）<br><b>页码：</b>P1350—P1353<br><b>页数：</b>4页<br><b>分类号：</b>TP391.41<br><b>机标分类号：</b>TP3 TN9<br><b>基金项目：</b>国家自然科学基金项目(61104119)<br><b>期刊名称：</b>《科学技术与工程》<br><b>出版时间：</b>2013年5期<br><b>期刊级别：</b>ISTIC<br><b>ISSN：</b>1671-1815<br><b>关键词：</b>SURF算法 特征提取算法 积分图像 耗时<br><b>摘要：</b>SUR算法是一种鲁棒性较好的特征提取算法,被广泛应用在图像处理和机器视觉上.但是,经典的SURF(Speeded Up Robust Features)算法积分图像(Integral Image)过程占用内存大而耗时多.为此,从积分图像处理方面对经典的SURF算法进行了改进,提出了只占用一个图像空间的快速积分图像算法.实验验证表明,该算法能够达到占用内存小且耗时少的预期效果.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">11</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span>图<span style="background:#cbcbcb">的</span>构造方式是位置（<span style="background:#cbcbcb">i</span>，j）<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，j)是<span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，j)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span>方向所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图像</span>定义为其<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">值</span>之和为：式中，<span style="background:#cbcbcb">ii</span>(z，y)表示<span style="background:#cbcbcb">原</span><span style="background:#cbcbcb">图像</span>在(z，y)<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图像</span>，<span style="background:#cbcbcb">i</span>(x，y</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……图像中不同尺寸的相似结构。一嗣一目臼踊(a)两矩形(b)三矩形(c)四矩形图1人脸Haar矩形特征1．2人脸类Haar特征快速算法为了快速计算人脸类Haar特征，我们采用Viola提出的“积分图像”方法，如图2所示。(z，3f)象素的<span class='green'>积分图像定义为其左上角像素值之和为：式中，ii(z，y)表示原图像在(z，y)处的积分图像，i(x，y</span>)表示(z，y)处的原始像素值。通过式(2)和式(3)的递归过程可以快速计算出图像(z，Y)处的积分图像ii……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《基于Haar特征级联强分类器和肤色模型的人脸检测》<br><b>作者：</b>李文娜<br><b>作者单位：</b>辽宁石油化工大学信息与控制工程学院,辽宁抚顺113001；东北大学信息科学与工程学院,辽宁沈阳110004<br><b>参考文献：</b>8篇<br><b>页码：</b>P61—P64<br><b>分类号：</b>TN919.81<br><b>机标分类号：</b>TP3 O23<br><b>基金项目：</b>辽宁省教育厅科学计划项目(2008386)<br><b>期刊名称：</b>《辽宁石油化工大学学报》<br><b>出版时间：</b>2010年3期<br><b>期刊级别：</b>ISTIC<br><b>ISSN：</b>1672-6952<br><b>关键词：</b>Haar小波变换 人脸检测 AdaBoost级联分类器 特征缩放与平移<br><b>摘要：</b>提出了基于Haar特征级联强分类器和肤色模型校验的快速人脸检测算法.利用基于人脸Haar特征的级联强分类器快速检测人脸,得到待判人脸区域,其中可能含有非人脸误检区域;利用肤色聚类模型对待判人脸区域进行筛选,过滤误检的非人脸区域.实验结果表明,该算法误检率低,检测速度快,在实际应用中有一定的价值.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">12</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造方式是位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)是原图像(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上角方向所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">，且0≤P(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">J</span>)≤1。P(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">J</span>)<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>越大，(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">J</span>)点<span style="background:#cbcbcb">的</span>5×5邻域内<span style="background:#cbcbcb">的</span>已知<span style="background:#cbcbcb">像素</span>就越</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……：若在输入图像J中，点(i，J)ED，则R(i。J)=0，反之R(i，J)=l。然后，选取矩阵作为模板来对置进行掩模，所得结果存人优先值矩阵P中。则P中元素的值表明在图像J中相应位置的像素点周围已知像素的相对个数<span class='green'>，且0≤P(i，J)≤1。P(i，J)的值越大，(i，J)点的5×5邻域内的已知像素就越</span>多，若P(i，J)=O，说明(i。J)点在待修复区域内部，其5×5邻域均为未知像素，若0P……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《一种快速的图像修复算法》<br><b>作者：</b>侯正信 何宇清 许微<br><b>作者单位：</b>天津大学电子信息工程学院,天津,300072<br><b>参考文献：</b>4篇<br><b>被引次数：</b>5次（统计时间：2015年8月）<br><b>页码：</b>P1909—P1912<br><b>页数：</b>4页<br><b>分类号：</b>TN919.8<br><b>机标分类号：</b>TP3 O17<br><b>基金项目：</b>教育部高等学校博士学科点专项科研基金(20060056051);天津市自然科学基金(07JCYBJC13800)<br><b>期刊名称：</b>《中国图象图形学报》<br><b>出版时间：</b>2007年10期<br><b>期刊级别：</b>ISTIC - PKU<br><b>ISSN：</b>1006-8961<br><b>关键词：</b>图像修复 BSCB模型 扩散率函数<br><b>摘要：</b>处理图像修复问题的一类主要方法是建立偏微分方程,用迭代的方法来求解,其中最具代表性的算法是BSCB(bertalmio-sapiro-caselles-bellester)算法.针对BSCB模型速度很慢的缺点,提出了结合扩散率函数的选择性自适应插值算法.实验结果表明,该算法简便易行,使运算速度比BSCB模型提高了很多,同时修复的效果也有所改善.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">13</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span><span style="background:#cbcbcb">的</span>构造方式<span style="background:#cbcbcb">是</span>位置（<span style="background:#cbcbcb">i</span>，j）<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">ii</span>(<span style="background:#cbcbcb">i</span>，j)<span style="background:#cbcbcb">是</span>原图像(<span style="background:#cbcbcb">i</span>，j)左上角方向所有像素<span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">tx，y，=．二‘u。，Y’<span style="background:#cbcbcb">i</span>其中<span style="background:#cbcbcb">ii</span>(x，y)<span style="background:#cbcbcb">是</span><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span>在点(工，)，)<span style="background:#cbcbcb">处</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">值</span>，f“：</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……像素积分单元阵列的结构来实现财图像进行人脸检测的并行性处理。该阵列的计算对象为Haar特征。该特征被抽象为各种尺寸大小的矩形。一系列的矩形组合起来即被用来表征人脸。黑白矩形内像素的灰度值经过加权求和后即为该特征的特征值。积分图fj的定义是：“<span class='green'>tx，y，=．二‘u。，Y’i其中ii(x，y)是积分图在点(工，)，)处的积分值，f“：</span>yf)是图像在点@’，)，t)处的灰度值。利用积分图可以快速计算矩形S的灰度和．即Sum=A+D—B—C……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《Adaboost算法的FPGA实现与性能分析》<br><b>作者：</b>许昀 赵峰<br><b>作者单位：</b>上海交通大学微电子学院,上海,200240<br><b>参考文献：</b>5篇<br><b>页码：</b>P149—P150,209<br><b>页数：</b>3页<br><b>分类号：</b>TP571.6<br><b>机标分类号：</b>TV TN2<br><b>期刊名称：</b>《微计算机信息》<br><b>出版时间：</b>2009年29期<br><b>ISSN：</b>1008-0570<br><b>关键词：</b>Adaboost Virtex5 FPGA 像素积分 实时性<br><b>摘要：</b>Adaboost算法采用由弱到强的级联型分类器用以快速检测人脸.但在实际应用中计算量巨大.在PC机上用纯软件实现该算法得到的目标检测速度也难以达到实时.本文论述了一种采用像素积分计算阵列的人脸检测系统,能够对图像像素进行流水运算处理以达到提升检测速度的效果,并在Virtex5系列FPGA上实现.通过该并行系统对单幅352x288的图像进行人脸检测,其速率可以达到50帧/秒,可以满足工业应用的实时性要求.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">14</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造方式是位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)是原<span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上角方向所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">和</span>[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）邻域<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">值</span><span style="background:#cbcbcb">和</span>输出<span style="background:#cbcbcb">图像</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）以前<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>处理结果计算输出<span style="background:#cbcbcb">图像</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>；#处理算法要按一定顺序</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……是后者必须设置一个模板平面。12第二章数字图像处理的基本概念图2.5.9模板处理6.串行处理和并行处理后一像素输出结果依赖于前面像素处理的结果，并且只能依次处理各像素而不能同时对各像素进行相同处理的一种处理形式称为串行处理。串行处理的特点是："用输入图像（<span class='green'>i，j）邻域的像素值和输出图像（i，j）以前像素的处理结果计算输出图像（i，j）像素的值；#处理算法要按一定顺序</span>进行。因此，不能同时并行计算各像素的输出值，且串行处理的顺序会影响处理结果。对图像内的各像素同时进行相同形式运算的一种处理形式称为并行……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(书籍数据)：</font><br>
<br><b>书名：</b>《计算机图像处理与分析》<br><b>作者：</b>贾永红<br><b>出版社：</b>武汉大学出版社<br><b>出版时间：</b>2001-06-30<br><b>ISBN：</b>7-307-03323-2<br><b>摘要：</b>本书分为三部分内容。第一部分介绍了数字图像处理的基本概念和图像变换等；第二部分包括图像增强、图像恢复与重建、图像编码与压缩；第三部分包括图像分割、二值图像处理与形状分析、纹理分析等。
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">15</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' >积分图<span style="background:#cbcbcb">的</span>构造<span style="background:#cbcbcb">方式</span>是位置（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span>值ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)是原图像(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)左上角<span style="background:#cbcbcb">方向</span>所有像素<span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">上述表示方法二维数组暗示<span style="background:#cbcbcb">方式</span>，其数组元素<span style="background:#cbcbcb">的</span>下标((<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">的</span>两个变量<span style="background:#cbcbcb">I</span>，<span style="background:#cbcbcb">j</span>，<span style="background:#cbcbcb">i</span>对应于垂直<span style="background:#cbcbcb">方向</span>，<span style="background:#cbcbcb">j</span>对应于水平<span style="background:#cbcbcb">方向</span>(即</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……示。Width是图像行长度，即图像的宽;Height是图像列长度，即图像的高;Threshold是二值化闺值(开关值)。指向数据区首地址共i行行长度一娜厂一‘二、图3-7二值化流程图图3-8像素(i，I)需要说明示意图必要声名的是，<span class='green'>上述表示方法二维数组暗示方式，其数组元素的下标((i，j)的两个变量I，j，i对应于垂直方向，j对应于水平方向(即</span>光栅扫描方向);采用与习惯上接纳的x-y坐标系有所不同，参考图需要-9，必要加以区分。M型图3-9x-y坐标系与……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(书籍数据)：</font><br>
<b>章节：</b>《基础篇》<br><b>书名：</b>《数字图像处理技术》<br><b>作者：</b>邓继忠, 张泰岭<br><b>出版社：</b>广东科技出版社<br><b>出版时间：</b>2005-09-01<br><b>ISBN：</b>7-5359-3991-0<br><b>摘要：</b>本书分为基础篇、方法篇、应用篇及其实验篇共四部分内容。主要包括数字图像处理的概述、系统组成、基本原理、几何变换和代数运算、图像噪声的消除、图像处理技术的应用等内容。
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">16</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='red' ><span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span><span style="background:#cbcbcb">的</span>构造方式是<span style="background:#cbcbcb">位置</span>（<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>）处<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">值</span>ii(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)是原<span style="background:#cbcbcb">图像</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)<span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span>方向所有<span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">的</span>和[15]：</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">为<span style="background:#cbcbcb">积分</span><span style="background:#cbcbcb">图</span>中<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">位置</span>索引，从<span style="background:#cbcbcb">图</span>中可以直观<span style="background:#cbcbcb">的</span>计算<span style="background:#cbcbcb">I</span>(<span style="background:#cbcbcb">i</span>，<span style="background:#cbcbcb">j</span>)为待匹配目标<span style="background:#cbcbcb">图像</span><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">左上</span><span style="background:#cbcbcb">角</span><span style="background:#cbcbcb">像素</span><span style="background:#cbcbcb">值</span>之和。而在代码级实现时，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……其中K和L为积分图中左上角横向和竖向遍历的索引，(i，j)<span class='green'>为积分图中的位置索引，从图中可以直观的计算I(i，j)为待匹配目标图像的左上角像素值之和。而在代码级实现时，</span>采用如下的算法流程来构建积分图[20]，如图3.10所示万方数据中北大学学位论文图3.10积分图计算算法示意图其中，s(……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《导弹末制导图像识别算法研究》<br><b>作者：</b>王金洋<br><b>学科专业：</b>控制工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>余红英<br><b>学位授予单位：</b>中北大学<br><b>学位年度：</b>2015
</td>
</tr>
</table>




<div style="display:block;">
<table id="xiugaijianyi" width="100%" cellpadding="3" cellspacing="3" style="margin-bottom:15px;margin-top:15px;border: 1px solid #C0C0C0;"
bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF">
<tbody>
<tr>
<td width="100%">
<div class="green" style="font-size:17px;padding-left:5px;">
该句修改建议（重度相似，请全面修改）
</div>
</td>
</tr>
<tr>
<td>
<div class="shubu">
1
</div>
<span style="  padding-left:10px;font-size:15px;">
原句与相似内容重合部分（重点修改标红部分）：
</span>
</td>
</tr>
<tr>
<td>
<font class="green">
<span class="red">积分</span>图的<span class="red">构造</span><span class="red">方式</span>是<span class="red">位置</span>（i，j）处的值<span class="red">ii</span>(i，j)是原<span class="red">图像</span>(i，j)<span class="red">左上</span>角<span class="red">方向</span><span class="red">所有</span><span class="red">像素</span>的和[15]：
</font>
</td>
</tr>
<tr>
<td>
<div class="shubu">
2
</div>
<span style="  padding-left:10px;font-size:15px;">
同义词：
</span>
</td>
</tr>
<tr>
<td width="100%" align="left">
<span class="red">构造：</span><span class="green">布局 机关 结构 </span><br/> <span class="red">方式：</span><span class="green">方法 要领 </span><br/> <span class="red">所有：</span><span class="green">全数 全部 扫数 </span><br/>
</td>
</tr>
</tbody>
</table>
</div>

<div style="display:block;">
<a href="#">回到顶部</a>
</div>

<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2017 PaperPass
</p>
</div>
<div style="margin-bottom:700px"></div>
</body>
</html>
